% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/null.model.R
\name{null.model}
\alias{null.model}
\title{Compute null model}
\usage{
null.model(predictors, xy = NULL, type = c(1, 2), algorithm = c('brt', 'maxent'),
         nb,unique.data = T, same = T, background.nb = nb, nb.rep = 10)
}
\arguments{
\item{predictors}{Rasterstack object that contains the predictors that will be used for species distribution models}

\item{xy}{Dataframe that contains the longitude and latitude of the visited pixels. Information required to perform type 1 null model. Default= NULL}

\item{type}{Null model type to perform. type=1 to perform a null model based on visited areas, type=2 to predict random model}

\item{algorithm}{Algorithm to compute the null model. 'brt' or 'maxent'}

\item{nb}{Number of points to randomly sample (among the matrix of visited pixels for 'type=1' model or in the entire geographic space for 'type=2')}

\item{unique.data}{If TRUE (default), pixel duplicates contained in 'xy' are removed}

\item{same}{If TRUE (default), the number of background data sampled in the area will be 'nb'}

\item{background.nb}{Number of background data to sample. If this argument is filled, 'same' is set FALSE.}

\item{nb.rep}{Null models number of replicates}
}
\value{
List of 6
\itemize{
\item \emph{$inputs}      Remembers the arguments used to implement null.model function
\item \emph{$eval}        Evaluation parameters of each model that compose the null model. See \link{SDMeval} for further information
\item \emph{$eval.null}   Evaluation of the mean null model. See \link{SDMeval} for further information
\item \emph{$pred.stack}  RasterStack of all the models produced to build the null model
\item \emph{$pred.mean}   Raster layer. Null model prediction. Mean of the $pred.stack RasterStack
\item \emph{$correlation} Spearman rank test value between the different maps produced }
}
\description{
Compute null model. Null models are useful tools to enhance a priori due to occurrence spatial structuration in species distribution predictions (e.g. non homogeneous sampling). \cr
Null model 'type 1' performs a model by randomly sampling data in a matrix that provides the visited longitudes and latitudes. Model null type #1 highlights extra information about prior influences of sampling effort on models.

Null model type #2 samples data in the entire study area, and reflects what should be predicted if occurrences were randomly distributed in the area.

Null models are a compilation of \emph{nb.rep} models. Species distribution models can be compared to density distribution of the null model outputs in order to estimate signification rates.
}
\details{
Data are sampled without replacement.
Each time the model is runned, new data (presence-like and background data) are sampled
}
\note{
Increasing the number of replications will enhance model null relevance (we advice nb.rep=100 for minimum). Please note that processing may take few minutes to hours.
}
\examples{
library(dismo)
#Download the environmental predictors restricted on geographical extent and depth (-1500m)
envi <-raster::stack(system.file('extdata', 'pred.grd',package='SDMPlay'))

# Realize a null model type #1 with MaxEnt
#-----------------------------------------
# Visited sites: for the example, we will take random points in the area
layer1 <- raster::subset(envi, 1)
# extract the coordinates of 500 random pixels in the area
visit <- dismo::randomPoints(layer1,n=500)

# Null model with 5 replications
modelN <- SDMPlay:::null.model(xy=visit,predictors=envi,type=1,algorithm='maxent',
                    nb=300,unique.data=TRUE, same=TRUE, nb.rep=5)

# Look at the inputs used to implement the model
modelN$input

# Get the evaluation of the models produced
modelN$eval

# Get the evaluation of the mean of all these produced models (i.e. evaluation
# of the null model )
modelN$eval.null

# Get the values of Spearman correlations between the all the prediction maps produced
modelN$correlation

# Plot the mean null model map with nice colors
library(grDevices)
palet.col <- colorRampPalette(c('deepskyblue','green','yellow', 'red'))(80)
raster::plot(modelN$pred.mean, col=palet.col)

# Realize a null model type #2 with BRT
#--------------------------------------
modelN2 <- SDMPlay:::null.model(xy=NULL,predictors=envi,type=2,algorithm='brt',
                     nb=300,unique.data=TRUE, same=TRUE, nb.rep=3)

}
\seealso{
\link[dismo]{nicheOverlap}: compare prediction maps
\link[rJava]{.jpackage}: initialize dismo for Java
}

